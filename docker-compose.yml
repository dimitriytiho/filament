version: '3'
services:
    app:
        build:
            context: ./docker/app
            args:
                - PHP_VERSION=${PHP_VERSION}
                - USER_NAME=${USER_NAME:-}
                - USER_ID=${USER_ID:-0}
                - GROUP_ID=${GROUP_ID:-0}
        image: databus/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            - USER_ID=${USER_ID:-0}
            - GROUP_ID=${GROUP_ID:-0}
            - USER_NAME=${USER_NAME:-www-data}
        volumes:
            - '.:/var/www/html:Z'
            - './.ssh:/root/.ssh'
        working_dir: /var/www/html
        networks:
            - sail
        cap_add:
            - SYS_PTRACE
        depends_on:
            - mysql
        user: '${USER_ID:-0}:${GROUP_ID:-0}'
    nginx:
        build:
            context: ./docker/nginx
            args:
                - NGINX_VERSION=${NGINX_VERSION}
        env_file:
            - .env
        image: nginx:${NGINX_VERSION}
        environment:
            - NGINX_PORT=${NGINX_PORT}
        volumes:
            - ./docker/nginx/templates:/etc/nginx/templates
            - ./docker/log/nginx:/var/log/nginx
            - '.:/var/www/html'
        ports:
            - ${NGINX_PORT}:80
        depends_on:
            - app
            - mysql
        working_dir: /var/www/html
        networks:
            - sail
    composer:
        image: "composer"
        volumes:
            - '.:/var/www/html'
        depends_on:
            - app
        command: install
        working_dir: /var/www/html
        environment:
            - USER_ID=${USER_ID:-0}
            - GROUP_ID=${GROUP_ID:-0}
        user: '${USER_ID:-0}:${GROUP_ID:-0}'
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        command:
            - '--skip-log-bin'
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './docker/mysql/dumps:/dumps:Z'
            - './docker/mysql/scripts:/scripts'
            - ./docker/mysql/dumps/dump.sql:/docker-entrypoint-initdb.d/dump.sql:ro
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
